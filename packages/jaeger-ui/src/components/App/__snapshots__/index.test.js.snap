// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JaegerUIApp does not explode 1`] = `
<ConfigProvider
  theme={
    Object {
      "components": Object {
        "Layout": Object {
          "bodyBg": "#fff",
          "footerBg": "#fff",
          "footerPadding": "24 50",
          "headerBg": "#404040",
          "headerHeight": 48,
          "headerPadding": "0 50",
          "siderBg": "#404040",
          "triggerBg": "tint(#fff, 20%)",
          "triggerHeight": 48,
          "zeroTriggerHeight": 42,
          "zeroTriggerWidth": 36,
        },
        "Menu": Object {
          "activeBarWidth": 3,
          "darkItemBg": "#151515",
          "itemBorderRadius": 0,
          "itemHoverBg": "transparent",
          "itemHoverColor": "#1890ff",
          "itemMarginInline": 0,
          "itemSelectedBg": "#e6f7ff",
          "itemSelectedColor": "#1890ff",
          "subMenuItemBorderRadius": 0,
        },
        "Table": Object {
          "rowHoverBg": "#e5f2f2",
        },
      },
      "token": Object {
        "borderRadius": 2,
        "colorPrimary": "#199",
        "wireframe": true,
      },
    }
  }
>
  <Provider
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Memo(Connect(WithRouteProps))>
      <Routes>
        <Route
          element={<WithRouteProps />}
          path="/search"
        />
        <Route
          element={<WithRouteProps />}
          path="/trace/:a?\\\\.\\\\.\\\\.:b?"
        />
        <Route
          element={<WithRouteProps />}
          path="/trace/:id"
        />
        <Route
          element={<WithRouteProps />}
          path="/dependencies"
        />
        <Route
          element={<WithRouteProps />}
          path="/deep-dependencies"
        />
        <Route
          element={<WithRouteProps />}
          path="/quality-metrics"
        />
        <Route
          element={<MonitorATMPage />}
          path="/monitor"
        />
        <Route
          element={
            <Navigate
              to="/search"
            />
          }
          path="/"
        />
        <Route
          element={
            <Navigate
              to="/search"
            />
          }
          path=""
        />
        <Route
          element={
            <Navigate
              to="/search"
            />
          }
          path="/"
        />
        <Route
          element={<NotFound />}
          path="*"
        />
      </Routes>
    </Memo(Connect(WithRouteProps))>
  </Provider>
</ConfigProvider>
`;
